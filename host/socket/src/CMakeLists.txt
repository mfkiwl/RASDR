cmake_minimum_required(VERSION 2.8)

MACRO( FIND_PATH_REQUIRED arg1 arg2 )
    FIND_PATH( ${arg1} ${arg2} ${ARGN} )
    IF( "${${arg1}}" STREQUAL "${arg1}-NOTFOUND"  )
        MESSAGE( FATAL_ERROR "${arg2} not found" )
    ELSE()
        MESSAGE( STATUS "${arg2} found in ${${arg1}}" )
    ENDIF()
ENDMACRO( FIND_PATH_REQUIRED )

PROJECT( socket )
SET( server_SRCS server.c )
SET( client_SRCS client.c )
IF(WIN32)
    MESSAGE( STATUS "Win32: using ws2_32.lib for linkage" )
    FIND_LIBRARY( WINSOCK_LIB ws2_32 )
    FIND_LIBRARY( ADVAPI_LIB Advapi32 )
    SET( server_SRCS ${server_SRCS} strlcpy.c inet_ntop.c stristr.c )
    SET( client_SRCS ${client_SRCS} strlcpy.c inet_ntop.c stristr.c )
ELSE(WIN32)
    MESSAGE( STATUS "unix: no extra libraries needed for linkage" )
    SET( WINSOCK_LIB "" )
    SET( ADVAPI_LIB "" )
    SET( server_SRCS ${server_SRCS} stristr.c )
    SET( client_SRCS ${client_SRCS} stristr.c )
ENDIF(WIN32)
FIND_PACKAGE( OpenMP )
if(OPENMP_FOUND)
    SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}" )
    SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}" )
    SET( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}" )
endif(OPENMP_FOUND)
ADD_EXECUTABLE( server ${server_SRCS} )
ADD_EXECUTABLE( client ${client_SRCS} )
TARGET_LINK_LIBRARIES( server ${LIBS} ${WINSOCK_LIB} ${ADVAPI_LIB} )
TARGET_LINK_LIBRARIES( client ${LIBS} ${WINSOCK_LIB} ${ADVAPI_LIB} )
